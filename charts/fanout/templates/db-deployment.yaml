apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fanout-platform.fullname" . }}-db
  labels:
    {{- include "fanout-platform.labels" . | nindent 4 }}
    app: db
spec:
  selector:
    matchLabels:
      {{- include "fanout-platform.selectorLabels" . | nindent 6 }}
      app: db
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  template:
    metadata:
      labels:
        {{- include "fanout-platform.labels" . | nindent 8 }}
        app: db
    spec:
      shareProcessNamespace: true
      imagePullSecrets:
      - name: fanout-regcred
      initContainers:
      - name: init-conf
        image: fanout/fc-conftool:0.0.3
        env:
        - name: LOGICAL_REGION
          valueFrom:
            configMapKeyRef:
              name: {{ include "fanout-platform.fullname" . }}-cluster
              key: logical_region
        command: ["/usr/local/bin/fc-conftool"]
        args:
        {{- range $i, $e := until (int .Values.brokerCount) }}
        - --srv-domain=_broker-internal-in._tcp.{{ include "fanout-platform.fullname" $ }}-broker-{{ $e }}.default.svc.cluster.local,trimlast
        - --srv-domain=_broker-internal-out._tcp.{{ include "fanout-platform.fullname" $ }}-broker-{{ $e }}.default.svc.cluster.local,trimlast
        {{- end }}
        - --srv-domain=_redis._tcp.{{ include "fanout-platform.fullname" . }}-db.default.svc.cluster.local
        - --template=/mnt/templates/dbworker.conf.j2:/etc/fc/dbworker.conf
        volumeMounts:
        - name: templates
          mountPath: /mnt/templates
          readOnly: true
        - name: conf
          mountPath: /etc/fc
      containers:
      - name: redis
        image: redis:6.0
        ports:
        - containerPort: 6379
        lifecycle:
          preStop:
            exec:
              command: ["sleep", "15"]
        resources:
          requests:
            memory: "2800Mi"
            cpu: "1000m"
      - name: dbworker
        image: fanout/fc-dbworker:0.0.7
        env:
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: {{ include "fanout-platform.fullname" . }}-cluster
              key: debug
        volumeMounts:
        - name: conf
          mountPath: /etc/fc
          readOnly: true
        livenessProbe:
          exec:
            command: ["python", "checkdbworker.py"]
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        lifecycle:
          preStop:
            exec:
              command: ["sleep", "15"]
        resources:
          requests:
            memory: "100Mi"
            cpu: "600m"
      - name: dbworker-sess
        image: fanout/fc-dbworker:0.0.7
        env:
        - name: DBWORKER_SESS
          value: "1"
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: {{ include "fanout-platform.fullname" . }}-cluster
              key: debug
        volumeMounts:
        - name: conf
          mountPath: /etc/fc
          readOnly: true
        lifecycle:
          preStop:
            exec:
              command: ["sleep", "15"]
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
      - name: conf
        image: fanout/fc-conftool:0.0.3
        command: ["/usr/local/bin/fc-conftool"]
        args:
        {{- range $i, $e := until (int .Values.brokerCount) }}
        - --srv-domain=_broker-internal-in._tcp.{{ include "fanout-platform.fullname" $ }}-broker-{{ $e }}.default.svc.cluster.local,trimlast
        - --srv-domain=_broker-internal-out._tcp.{{ include "fanout-platform.fullname" $ }}-broker-{{ $e }}.default.svc.cluster.local,trimlast
        {{- end }}
        - --srv-domain=_redis._tcp.{{ include "fanout-platform.fullname" . }}-db.default.svc.cluster.local
        - --service=dbworker
        - --template=/mnt/templates/dbworker.conf.j2:/etc/fc/dbworker.conf:dbworker
        - "--process=fc-dbworker:dbworker"
        - --interval=5
        securityContext:
          capabilities:
            add:
            - SYS_PTRACE
        volumeMounts:
        - name: templates
          mountPath: /mnt/templates
          readOnly: true
        - name: conf
          mountPath: /etc/fc
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
      volumes:
      - name: conf
        emptyDir: {}
      - name: templates
        configMap:
          name: {{ include "fanout-platform.fullname" . }}-db-templates
